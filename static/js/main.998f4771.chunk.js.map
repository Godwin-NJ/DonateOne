{"version":3,"sources":["component/PaymentForm.js","component/StripeContainer.js","component/Payment.js","component/Donate.js","App.js","reportWebVitals.js","index.js"],"names":["CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","useState","success","setSuccess","stripe","useStripe","elements","useElements","handleSubmit","e","a","preventDefault","createPaymentMethod","type","card","getElement","CardElement","error","paymentMethod","id","axios","post","amount","data","console","log","message","onSubmit","className","options","stripeTestPromise","loadStripe","StripeContainer","Payment","show","clicked","paddingTop","paddingLeft","textAlign","Donate","setShow","selectedRadioBtn","setSelectedRadioBtn","RadioBtnValue","target","value","name","width","height","marginLeft","onChange","htmlFor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.998f4771.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\n// import { getElementError } from '@testing-library/react';\r\n\r\n\r\nconst CARD_OPTIONS = {\r\n\ticonStyle: \"solid\",\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\ticonColor: \"#c4f0ff\",\r\n\t\t\tcolor: \"#fff\",\r\n\t\t\tfontWeight: 500,\r\n\t\t\tfontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n\t\t\tfontSize: \"16px\",\r\n\t\t\tfontSmoothing: \"antialiased\",\r\n\t\t\t\":-webkit-autofill\": { color: \"#fce883\" },\r\n\t\t\t\"::placeholder\": { color: \"#87bbfd\" }\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\ticonColor: \"#ffc7ee\",\r\n\t\t\tcolor: \"#ffc7ee\"\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default function PaymentForm() {\r\n    const[success, setSuccess] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card : elements.getElement(CardElement)\r\n        })\r\n    \r\n\r\n    if(!error){\r\n        try {\r\n            const {id} = paymentMethod\r\n            const response = await axios.post(\"http://localhost:3000/payment\", {\r\n                amount : 1000,\r\n                id\r\n            })\r\n            if(response.data.success){\r\n                console.log(\"successful payment\")\r\n            setSuccess(true);\r\n            }\r\n        } catch (error) {\r\n            console.log(\"Error : \"+ error)\r\n        }  \r\n    }else{\r\n        console.log(error.message)\r\n           }\r\n     }\r\n\r\n    return (\r\n        <>\r\n            {!success ? \r\n            <form onSubmit={handleSubmit}>\r\n                <fieldset className=\"FormGroup\">\r\n                    <div className=\"FormRow\">\r\n                        <CardElement options={CARD_OPTIONS}/>\r\n                    </div>\r\n                </fieldset>\r\n                <button >Pay</button>\r\n            </form>    \r\n        : \r\n        <div>\r\n            <h2>You Just extended Love by Donating to Feed a child, Thanks For your Love</h2>\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n","import {Elements} from '@stripe/react-stripe-js';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport PaymentForm from './PaymentForm';\r\nimport '../../src/App.css';\r\n\r\nconst PUBLIC_KEY = \"pk_test_51IeyckKraXYgLPWBXRnkbl3hjmzeTeY83uB7F4T0s4Nt7uQ0nYczEZxSCoBrLavCg3NkBNW8ABnVAh06wIjb7WfS00nCjWo9RS\"\r\n\r\nconst stripeTestPromise = loadStripe(PUBLIC_KEY)\r\n\r\nconst StripeContainer = () => {\r\n    return ( \r\n        <Elements stripe={stripeTestPromise}>\r\n            < PaymentForm />\r\n        </Elements >\r\n     );\r\n}\r\n \r\nexport default StripeContainer;","import StripeContainer from './StripeContainer'\r\n\r\n\r\nconst Payment = ({show,clicked}) => {\r\n    return ( \r\n        <div  className=\"paymentForm\">\r\n         {show  ? <section className=\"container w-100 p-3 h-75\" >\r\n            <div className=\"card \" >\r\n            <h4 className=\"text-start\" style={{paddingTop:'20px', paddingLeft:'40px'}}>\r\n               Feed a child for 3 days\r\n            </h4>\r\n            <div>\r\n               < StripeContainer/>\r\n            </div>\r\n            <p style={{textAlign:'center', paddingTop:\"50px\"}}>By making a donation you agree to our<br/> non refundable donation policy</p>\r\n            </div>\r\n        </section> \r\n        : null}\r\n        \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Payment;","import {useState} from 'react'\r\nimport Payment from './Payment'\r\n\r\n\r\nfunction Donate () {\r\n        const[show, setShow] = useState(false);\r\n        const [clicked, setClicked] = useState(false);\r\n        const[selectedRadioBtn, setSelectedRadioBtn] = useState('')\r\n  \r\n\r\n        const RadioBtnValue = (e) => {\r\n            setSelectedRadioBtn(e.target.value)\r\n            // setClicked(true)\r\n            setShow(false)\r\n            console.log('>>>>>>>>',e)\r\n        //    setClicked(e.target.value)\r\n           e.preventDefault()\r\n        }\r\n        // console.log(RadioBtnValue);\r\n\r\n        const ClickDonate = (e) => {\r\n            e.preventDefault();\r\n            \r\n            // setClicked(true)\r\n            setShow(true)\r\n            // if i sent it as !show , it toggles \r\n            // setSelectedRadioBtn(selectedRadioBtn)\r\n            console.log('You have selected:',{RadioBtnValue})\r\n            // if(RadioBtnValue){\r\n            //     setShow(true);\r\n            // }\r\n        }\r\n        // console.log(ClickDonate);\r\n\r\n       return(\r\n          <section className=\"container w-50 p-3 h-75\" >\r\n            <div className=\"card \" >\r\n            <h4 className=\"text-start\" style={{paddingTop:'20px', paddingLeft:'40px'}}>\r\n                How much do you want to donate?\r\n            </h4>\r\n            <form className=\"card-body w-100 row\" onSubmit={ClickDonate}>\r\n                    <div className=\"form-check form-check-inline cardBorder \">\r\n                        <input className=\"form-check-input \" type=\"radio\" name=\"inlineRadioOptions\" \r\n                        id=\"inlineRadio1\" \r\n                        value={selectedRadioBtn === 'option1'}\r\n                        style={{width:'30px' , height:'35px',marginLeft:'-15px'}} \r\n                        onChange={RadioBtnValue}\r\n                        />\r\n                        <label className=\"form-check-label \" htmlFor=\"inlineRadio1\" \r\n                        style={{marginLeft:'10px'}}>\r\n                            <h5>Feed a child for 1 day</h5>\r\n                            <p>Nok 6.65</p>\r\n                        </label>\r\n                    </div>   \r\n\r\n                     <div className=\"form-check form-check-inline cardBorder\">\r\n                        <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" \r\n                        id=\"inlineRadio2\" \r\n                        value={selectedRadioBtn === 'option2'}\r\n                        style={{width:'30px' , height:'35px',marginLeft:'-15px'} }\r\n                        onChange={RadioBtnValue}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineRadio2\" \r\n                        style={{marginLeft:'10px'}}>\r\n                            <h5>Feed a child for 3 day</h5>\r\n                            <p>Nok 6.65</p>\r\n                        </label>\r\n                    </div>  \r\n\r\n                     <div className=\"form-check form-check-inline cardBorder\">\r\n                        <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" \r\n                        id=\"inlineRadio3\" \r\n                        value={selectedRadioBtn === 'option3'}\r\n                        style={{width:'30px' , height:'35px',marginLeft:'-15px'}}\r\n                        onChange={RadioBtnValue}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineRadio3\" \r\n                        style={{marginLeft:'10px'}}>\r\n                            <h5>Feed a child for 3 day</h5>\r\n                            <p>Nok 6.65</p>\r\n                        </label>\r\n                    </div>   \r\n                     <button type=\"submit\" className=\"btn btn-dark confirmBtn\" >\r\n                        Select a donation\r\n                        {/* create an array and use map(method) in here and loop thru it,use conditions ( if-else) when a particular\r\n                         input is selected display information as regards  */}\r\n                    </button>      \r\n            </form>\r\n            {/*end of Styling of the card body */}\r\n                \r\n            </div>\r\n             < Payment show={show} />\r\n{/* When You see Val in maotech\r\n             I want the amount stated in the donate box to also appear \r\n            in the pop up modal dynamically when selected and confirmation done and to ensure the selected donation is what \r\n            is going to be debitted from the customer accts */}\r\n        </section>\r\n       )\r\n}\r\n \r\nexport default Donate;","// import 'bootstrap/dist/css/bootstrap.min.css';\nimport Donate from './component/Donate'\nimport '../src/App.css'\n\nfunction App() {\n    \n  return (\n    <div className=\"container\">\n    \n      <Donate />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}